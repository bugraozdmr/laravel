#############  COURSE #############

-- GEREKLILIKLER
/*
COMPOSER
XAMPP
VS CODE
*/

// yeni keyboard zorluyor :D %60 almayın :/

## Extensions
- Laravel extension Pack (GENEL olarak çok fazla şey içeriyor iyidir DOTENV...)
- Laravel Blade Spacer ( Code formatlama için gerekli )
- PHP Intelephense

#-# extension pack ile gelen birkaç extension siliniyor :: DevDb gereksiz, EditorConfig for VS Code gereksiz

## .vscode ile custom configuration eklemiş oluyoruz ( Daha fazla ayar eklenebilir )
Burda font size ayarı vs. iyi

#### COMPOSER LARAVEL PROJE OLUSTURMA --> bu composer ile projeyi indirir
composer create-project laravel/laravel example-app

## projeyi çalıştırmak (once cd ile icine gir)
php artisan serve

## LARAVEL default olarak sqlite ile gelir
.env içinde driver'i değiştir mysql ile aynı şu şekil
#####
DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3307
DB_DATABASE=laravel
DB_USERNAME=grant
DB_PASSWORD=grant345
#####

# Sonra seedi insert etmek gerek ( kokte olman gerektigini unutma )
php artisan migrate

# php artisan çokça komuta sahip bunları kullanmak işimizi baya bir kolaylaştırır
- php artisan yapıp enterlayınca tüm komutları listelemiş oluruz
- php about ile uygulama hakkında tüm bilgiler gelir
- inspire ile güzel sözler çeker

# sevdiğim komutlar
- php artisan about
- php artisan inspire

# yeni bir view oluşturma
php artisan make:view home

# klosor altında view olusturma (klosor var olmak zorunda değil)
php artisan make:view about/index

# yeni controller oluşturma
php artisan make:controller HomeController

## Yeni model oluşturma artisan kullanarak
php artisan make:model post

## php artisan tinker 
ne işe yarar =>
Shell for laravel kısaca :: Burdan komutlar çalıştırılır. :: Debug yapılır application için
-- console'dan mesela kullanıcı üretimi bile sağlayabilir . => illa direkt gidip form doldurmaya gerek yoktur.
-- test için mesela dumy userlar gömme vs.

mesela bir tablodaki kayıt sayısını almak
App\Models\User::count()

Unutma burda namespace giryorsun hangi tablo hakkında bilgi çekmek istiyorsan

$$$ reminder -> factories = dummy data üretmek için bir factory yazılmış olabilir burdaki database\factories altında görürsün

# tinker ile dummy user uretmek factory aracılığı ile
App\Models\User::factory(10)->create();

# 10 tane kayıt üretcek

-- date değerini görmek çünkü laravelde locale değeri vardır
date('d-M-Y')

## tüm route listesini görmek
php artisan route:list

## neden blade template kullanmalıyız ?
direkt .php uzantılı olanlarda bir şey yazdırcağımız zaman sürekli php tagı aç kapat yapmamız gerekmekte ancak blade sayesinde hazır directive kullanırız @if gibi vs. ASP ile aynı mantık ordada vardı blade template

## stack ile yield hemen hemen aynı ancak kullanımları farklı stackleri daha çok sayfa altında vs. ihtiyaç duyulan yerde kullanıyoruz ancak yield tek bir yer spesifiktir ve extend ile kullanıyoruz.
$ stacki pushlamak gerek unutma !
